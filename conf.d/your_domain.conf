#config for laravel backend API
upstream your_app_name {
        server ternasys-nginx:80 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
server {
        listen 80;
        server_name your_domain.com;
        
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        
        if ($blocked_agent) { return 444; }
        if ($blocked_uri) { return 444; }
        
        # return 301 https://$host$request_uri; # force https handle by cloudflare
    }

    server {
        listen 443 ssl http2;
        server_name puput-api.ternasys.com;

        ssl_certificate /etc/nginx/certs/path_your_cert.pem;
        ssl_certificate_key /etc/nginx/certs/path_your_key.key;

        # API-specific security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Permitted-Cross-Domain-Policies "none" always;
        
        # CORS configuration
        add_header Access-Control-Allow-Origin "https://your_domain.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # API-specific CSP
        add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none';" always;

        client_max_body_size 10M;
        limit_conn conn_limit 30;
        
        if ($blocked_agent) { return 444; }
        if ($blocked_uri) { return 444; }
        if ($http_cf_connecting_ip = "") { return 403; }

        access_log /var/log/nginx/api.access.log security;
        error_log /var/log/nginx/api.error.log warn;

        # Handle CORS preflight globally
        # if ($request_method = 'OPTIONS') {
        #     add_header Access-Control-Max-Age 86400;
        #     add_header Content-Length 0;
        #     return 204;
        # }

        # Authentication endpoints (stricter limits)
        location ~* ^/(api/v[0-9]+/)?(auth|login|register|password|reset) {
            limit_req zone=api_auth burst=2 nodelay;
            
            # Enhanced security for auth endpoints
            if ($request_method !~ ^(POST|GET|OPTIONS)$) {
                return 405;
            }
            
            proxy_pass http://your_app_name;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Prevent caching sensitive endpoints
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
            add_header Pragma "no-cache" always;
            expires -1;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
        }

        # General API endpoints
        location /api/ {
            limit_req zone=api burst=60 nodelay;
            
            if ($request_method !~ ^(GET|POST|PUT|DELETE|PATCH|OPTIONS)$) {
                return 405;
            }
            
            proxy_pass http://your_app_name;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
            
            # API response headers
            add_header X-API-Version "1.0" always;
        }

        # Health check (no rate limiting)
        location = /health {
            access_log off;
            proxy_pass http://your_app_name;
            proxy_set_header Host $host;
            proxy_connect_timeout 2s;
            proxy_read_timeout 2s;
        }

        # Default location for other requests
        location / {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://your_app_name;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /nginx_status {
            stub_status;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
            access_log off;
        }
    }
